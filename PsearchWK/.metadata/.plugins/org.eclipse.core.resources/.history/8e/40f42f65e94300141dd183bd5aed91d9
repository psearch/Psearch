package controller;

import java.io.*;
import java.sql.*;

import javax.swing.JOptionPane;

import org.jdom2.*;
import org.jdom2.output.Format;
import org.jdom2.output.XMLOutputter;

import banco.BD;

public class XmlCreate {
	public void gerarXML(int idcategoria, String caminho) throws SQLException {

		BD bd = new BD();
		if (bd.getConnection()) {
			Element pontos = new Element("pontos");
			Document documento = new Document(pontos);
			String sql = "Select pessoa.*,nome_razsocial,categoria_prof.descricao" 
					+"from pessoa,categoria_prof"
					+"where pessoa.ID_categoria=categoria_prof.ID_categoria" 
					+"and pessoa.Cod_tipo =2"
					+"and pessoa.ID_categoria=6;";

			bd.st = bd.con.prepareStatement(sql);
			bd.st.setString(1, "" + idcategoria);
			bd.rs = bd.st.executeQuery();

			try {
				while (bd.rs.next())// enquanto existir um próximo ele adciona
					// uma nova tag ocorrencia ao arquivo
				{

					String rua = bd.rs.getString(9);
					String num = bd.rs.getString(10);
					String cid = bd.rs.getString(6);
					String uf = bd.rs.getString(5);

					Element oco = new Element("ocorrencia");
					
					
					Element name = new Element("Name");
					name.setText(bd.rs.getString(2));
					
					
					Element profissao = new Element("Profissao");
					profissao.setText(bd.rs.getString(18));
					
					
					
					Element latitude = new Element("Latitude");
					latitude.setText(bd.rs.getString(11));
					Element longitude = new Element("Longitude");
					longitude.setText(bd.rs.getString(12));

					Element endereco = new Element("endereco");
					endereco.setText(rua + ", nº" + num + ", " + cid + " - "
							+ uf);

					Element mail = new Element("mail");
					mail.setText(bd.rs.getString("email"));

					Element telefone = new Element("telefone");
					telefone.setText(bd.rs.getString("tel_cel"));


					oco.addContent(profissao);
					oco.addContent(telefone);
					oco.addContent(mail);
					oco.addContent(endereco);
					oco.addContent(latitude);
					oco.addContent(longitude);
					oco.addContent(name);
					pontos.addContent(oco);

				}

				Format format = Format.getCompactFormat().setEncoding(
						"ISO-8859-1");
				format.setIndent("   ");
				format.setLineSeparator("\n");
				XMLOutputter xout = new XMLOutputter(format);
				FileWriter arquivo = new FileWriter(new File(caminho
						+ "/pontos.xml"));
				xout.output(documento, arquivo);
				bd.close();
				System.out.println("Xml gerado com êxito");
				;
			} catch (IOException erro) {
				JOptionPane.showMessageDialog(null, "Falha ao gerar o arquivo!"
						+ erro.toString());
			} catch (SQLException erro) {
				JOptionPane.showMessageDialog(null, "Erro " + erro.toString());
			}
		} else {

		}
	}

	public static void main(String[] args) throws SQLException {

		XmlCreate c = new XmlCreate();
		c.gerarXML(4, "C:/xml");

	}

}
